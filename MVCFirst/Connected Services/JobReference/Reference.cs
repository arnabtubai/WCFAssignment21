//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCFirst.JobReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jobs", Namespace="http://schemas.datacontract.org/2004/07/WCFAssign")]
    [System.SerializableAttribute()]
    public partial class Jobs : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobRoleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobId {
            get {
                return this.JobIdField;
            }
            set {
                if ((object.ReferenceEquals(this.JobIdField, value) != true)) {
                    this.JobIdField = value;
                    this.RaisePropertyChanged("JobId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobRole {
            get {
                return this.JobRoleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobRoleField, value) != true)) {
                    this.JobRoleField = value;
                    this.RaisePropertyChanged("JobRole");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="JobReference.IJobOpenning")]
    public interface IJobOpenning {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobOpenning/OpeningJobs", ReplyAction="http://tempuri.org/IJobOpenning/OpeningJobsResponse")]
        MVCFirst.JobReference.Jobs[] OpeningJobs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobOpenning/OpeningJobs", ReplyAction="http://tempuri.org/IJobOpenning/OpeningJobsResponse")]
        System.Threading.Tasks.Task<MVCFirst.JobReference.Jobs[]> OpeningJobsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobOpenning/OpeningJobsByRole", ReplyAction="http://tempuri.org/IJobOpenning/OpeningJobsByRoleResponse")]
        MVCFirst.JobReference.Jobs[] OpeningJobsByRole(string strJobRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IJobOpenning/OpeningJobsByRole", ReplyAction="http://tempuri.org/IJobOpenning/OpeningJobsByRoleResponse")]
        System.Threading.Tasks.Task<MVCFirst.JobReference.Jobs[]> OpeningJobsByRoleAsync(string strJobRole);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IJobOpenningChannel : MVCFirst.JobReference.IJobOpenning, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class JobOpenningClient : System.ServiceModel.ClientBase<MVCFirst.JobReference.IJobOpenning>, MVCFirst.JobReference.IJobOpenning {
        
        public JobOpenningClient() {
        }
        
        public JobOpenningClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public JobOpenningClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobOpenningClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public JobOpenningClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCFirst.JobReference.Jobs[] OpeningJobs() {
            return base.Channel.OpeningJobs();
        }
        
        public System.Threading.Tasks.Task<MVCFirst.JobReference.Jobs[]> OpeningJobsAsync() {
            return base.Channel.OpeningJobsAsync();
        }
        
        public MVCFirst.JobReference.Jobs[] OpeningJobsByRole(string strJobRole) {
            return base.Channel.OpeningJobsByRole(strJobRole);
        }
        
        public System.Threading.Tasks.Task<MVCFirst.JobReference.Jobs[]> OpeningJobsByRoleAsync(string strJobRole) {
            return base.Channel.OpeningJobsByRoleAsync(strJobRole);
        }
    }
}
